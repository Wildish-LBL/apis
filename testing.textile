h1. Testing / sample framework for APIs

The testing framework is intended to serve several purposes:
# to provoke some actual use of a proposed API to check that is can actually be implemented as described, and
# to provide sample implementations that supplement the descriptions
# to provide an initial basis for interoperability testing
# to provide a reference implementation for initial testing of clients that use the various services

Within the context of Wf4Ever, it is clear that different services will be implemented in different programming environments (Java+Tomcat+Wicket, Python+Pylons, Ruby+Rails are all being used for different parts of the project).  As such, it is probably unreasonable to require that all service test implementations or  mock-ups are implemented in a common framework.  To this end, I propose that a service mock-up is implemented by an appropriate developer in the environment of their choice.  We will probably want to figure out a test environment that allows these diverse services to be run alongside each other.

For client test implementations, assuming that these are generally quite simple, I propose that these are implemented in Python as a unit test suite that runs against the mock implementations.  Alternatively, they could be implemented as a series of command line programs that can be invoked by a shell script, but this would lose the structure of a unit testing framework, which could be useful for quick regression testing when services are updated.

All of this should to implemented with a view to continuous integration deployment via Jenins or a similar system.

